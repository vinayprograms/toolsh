#!/bin/bash

# Colors
BOLD='\033[1;37;41m'
NC='\033[0m' # No Color

source "$HOME/.gtdrc"

main() {

	if [[ "$1" == "list" ]] ; then
		#taskpull status:pending -rnr projects
		list_projects
		exit
	fi

	if [[ "$1" == "show" ]] ; then
		watch --color -t -n 5 "prj list"
		exit
	fi

	PROJECT="$1"

	if [[ "$PROJECT" == "none" || "$PROJECT" == "" ]] ; then
		echo "No project name provided."
		exit
	fi

	shift
	if [[ "$#" == "0" ]] ; then
		taskpull &>/dev/null
		echo ""; echo -e "${BOLD}    TASKS    ${NC}";
		#task list project:"$PROJECT" -rnr
		karya "$PROJECT"
		if [[ "$PROJECT" != "" ]]; then
			echo ""; echo -e "${BOLD}   NOTES   ${NC}"
			note_count=$(note "$PROJECT" count)
			printf "%s notes\n" "$note_count"
			note "$PROJECT" ls
		fi
	else
		SUBCMD="$1"
    shift

		case "$SUBCMD" in

			tickle)
				TASKID="$1"; shift
				CONTAINS=$(does_prj_contain_task "$PROJECT" "$TASKID")
				if [[ "$CONTAINS" == "0" ]] ; then
					echo "Task-ID $TASKID not found in project \"$PROJECT\""
					exit
				fi
				if [[ "$#" == "0" ]] ; then
					tasksync "$TASKID" modify wait:monday
				else
					tasksync "$TASKID" modify wait:"$*"
				fi
				;;

			add)
				TASK="$*"
				tasksync "$SUBCMD" "\"$TASK\"" project:"$PROJECT"
				;;
		esac
	fi
}

list_projects() {
	task_data=$(get_projects_and_tasks)
	local maxlen=0
	while IFS= read -r line; do
		project_name=$(echo "$line" | sed -E 's/\s*[0-9]+$//' | tr -d '[:space:]')
		[[ ${#project_name} -gt ${maxlen} ]] && maxlen=${#project_name}
	done <<< "$task_data"
	echo ""
	printf "${BOLD}%-${maxlen}s  TASKS  NOTES ${NC}\n" "PROJECT"
	local prj_count=0 total_tasks=0 total_notes=0
	while IFS= read -r line; do
		project_name=$(echo "$line" | sed -E 's/\s*[0-9]+$//' | tr -d '[:space:]')
		p_name=$(echo "$project_name" | xargs)
		task_count=$(echo "$line" | awk '{print $NF}')
		if [[ "$p_name" != "(none)" ]]; then
			zettel_count=$(note "$p_name" count)
		else
			zettel_count="0"
		fi
		printf "%-${maxlen}s  %5s %5s\n" "$project_name" "$task_count" "$zettel_count"
		prj_count=$(( prj_count + 1 ))
		total_tasks=$(( total_tasks + task_count ))
		total_notes=$(( total_notes + zettel_count ))
	done <<< "$task_data"
	printf "\n%s Projects, %s tasks, %s notes\n\n" "$prj_count" "$total_tasks" "$total_notes"
}

get_projects_and_tasks() {
	list_data=$(karya projects)
	list_data=$(echo "$list_data" | tail -n +4)
	count=$(echo "$list_data" | wc -l)
	echo "$list_data" | head -n "$(( count - 2 ))"
}

does_prj_contain_task() {
	taskpull &>/dev/null
	FOUND=$(task list project:"$1" | grep "$2")
	if [[ "$FOUND" == "" ]] ; then
		FOUND=$(task waiting project:"$1" | grep "$2")
	fi

	if [[ "$FOUND" == "" ]] ;  then
		echo 0
	else
		echo 1
	fi
}

main "$@"

