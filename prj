#!/bin/bash

# Colors
BOLD='\033[1;37;41m'
NC='\033[0m' # No Color

main() {
	if [[ "$1" == "list" ]] ; then
		taskpull status:pending -rnr projects
		exit
	fi

	if [[ "$1" == "show" ]] ; then
		watch --color -t -n 5 "task status:pending -rnr projects"
		exit
	fi

	PROJECT="$1"

	if [[ "$PROJECT" == "none" || "$PROJECT" == "" ]] ; then
		echo "Showing tasks that don't have a project..."
		PROJECT=""
	fi

	shift
	if [[ "$#" == "0" ]] ; then
		taskpull &>/dev/null
		echo ""; echo -e "${BOLD}    TASKS    ${NC}";
		task list project:"$PROJECT" -rnr
		echo ""; echo -e "${BOLD}   WAITING   ${NC}"
		task waiting project:"$PROJECT" -rnr
		echo ""; echo -e "${BOLD}   SOMEDAY   ${NC}"
		task list project:"$PROJECT" +someday -rnr

	else
		SUBCMD="$1"
    shift

		case "$SUBCMD" in

			tickle)
				TASKID="$1"; shift
				CONTAINS=$(does_prj_contain_task "$PROJECT" "$TASKID")
				if [[ "$CONTAINS" == "0" ]] ; then
					echo "Task-ID $TASKID not found in project \"$PROJECT\""
					exit
				fi
				if [[ "$#" == "0" ]] ; then
					tasksync "$TASKID" modify wait:monday
				else
					tasksync "$TASKID" modify wait:"$*"
				fi
				;;

			add)
				TASK="$*"
				tasksync "$SUBCMD" "\"$TASK\"" project:"$PROJECT"
				;;
		esac
	fi
}

does_prj_contain_task() {
	taskpull &>/dev/null
	FOUND=$(task list project:"$1" | grep "$2")
	if [[ "$FOUND" == "" ]] ; then
		FOUND=$(task waiting project:"$1" | grep "$2")
	fi

	if [[ "$FOUND" == "" ]] ;  then
		echo 0
	else
		echo 1
	fi
}

main "$@"

